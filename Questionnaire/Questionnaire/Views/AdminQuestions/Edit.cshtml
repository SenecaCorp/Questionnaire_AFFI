@model Questionnaire.Entities.Question

@{
    ViewBag.Title = "Edit";

    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

<script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>

<div class="container-fluid">
    <div class="row">
        <div class="span10">
    @using (Html.BeginForm()) {
        <fieldset>
          @*  <legend>Question #@Model.Id</legend>*@

            <div class="row-fluid">
                <div class="span3">
                    <input type="submit" value="Save" class="btn btn-success"/>
                    <button class="btn" onclick="@Url.Action("Back to List", "Index")">Back to list</button>
                </div>
            </div>


            @Html.HiddenFor(model => model.Id)
            @Html.HiddenFor(model => model.CategoryId)
            
            <h5>Question text</h5>
            
            <div class="editor-field">
                @Html.TextAreaFor(model => model.Title, new { @class = "span8", rows = 4 })
            </div>

            <h5>Summary</h5>

            <div class="editor-field">
                @Html.TextAreaFor(model => model.Summary, new { @class = "span8", rows = 4 })
            </div>

            <h5>Index</h5>

            <div class="editor-field">
                @Html.EditorFor(model => model.Index, new { @class = "span3" })
            </div>

            <h5>Category</h5>

            @{
                List<Questionnaire.Entities.Category> list = QuestionnairePrototype.Infrastructure.QuestionnaireHelper.getCategoriesList();
                var items = new SelectList(list, "Id", "Title").OrderBy(t => t.Text);
            }

            <div class="editor-field">
                @Html.DropDownListFor(model => model.CategoryId, @items, new { @class = "span3" })
            </div>

            <h4>Answers</h4>
            <div class="row">
                <div class="span10">
                     @Html.ActionLink("Add new answer", "AddAnswer", new {qId = Model.Id}, new { @class = "button btn btn-primary" })
                    <br />
                    <br />
                    <table class="table table-bordered" style="table-layout: fixed;">
                        <thead>
                            <tr>
                              <th style="width: 20%">Text of Answer</th>
                              <th style="width: 70%">Comment</th>
                              <th style="width: 10%">Weight</th>
                              <th style="width: 9%"></th>
                              <th style="width: 15%"></th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var answer in Model.Answers)
                            {
                                <tr>
                                <td>@Html.DisplayFor(textOfAnswer => answer.Title)</td>
                                <td>@Html.DisplayFor(commentOfAnswer => answer.Comment)</td>
                                <td><center>@Html.DisplayFor(valueOfAnswer => answer.Value)</center></td>
                                <td>@Html.ActionLink("Edit", "EditAnswer", new { id = answer.Id }, new { @class = "button btn btn-warning" }) </td>
                                <td>@Html.ActionLink("Delete", "DeleteAnswer", new { id = answer.Id }, new { @class = "button btn btn-danger" })</td>
                                
                             
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
            <div class="row-fluid">
                <div class="span3">
                    <input type="submit" value="Save" class="btn btn-success"/>
                    <button class="btn" onclick="@Url.Action("Back to List", "Index")">Back to list</button>
                </div>
            </div>
        </fieldset>
    }
    </div>
    </div>

</div>